licenses(["notice"])

load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//container:container.bzl", "container_push", "container_image")

package(default_visibility = ["//visibility:public"])

go_library(
    name = "go_default_library",
    srcs = [
        "config.go",
        "main.go",
    ],
    importpath = "github.com/mingkaic/ultrasound/server",
    visibility = ["//visibility:private"],
    deps = [
        "//data:go_default_library",
        "//emitter/api:go_default_library",
        "//emitter/proto:go_default_library",
        "//viewer/api:go_default_library",
        "//viewer/proto:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
    ],
)

go_binary(
    name = "server",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

# docker image
go_image(
    name = "ultrasound_server_base",
    srcs = [
        "config.go",
        "main.go",
    ],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
    deps = [
        "//data:go_default_library",
        "//emitter/api:go_default_library",
        "//emitter/proto:go_default_library",
        "//viewer/api:go_default_library",
        "//viewer/proto:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
    ],
)

container_image(
    name = "ultrasound_server",
    base = "//server:ultrasound_server_base",
    stamp = True,
)

container_push(
    name = "ultrasound_push",
    format = "Docker",
    image = "//server:ultrasound_server",
    registry = "index.docker.io",
    repository = "mkaichen/ultrasound_server",
    tag = "latest",
)
